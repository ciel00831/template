<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.tiny.dao.MemberDao">
	<resultMap id="result" type="member">
		<result property="memberId" column="memberId" />
		<result property="userId" column="userId" />
		<result property="email" column="email" />
		<result property="nickName" column="nickName" />
		<result property="password" column="password" />
		<result property="birthday" column="birthday" />
		<result property="description" column="description" />
		<result property="point" column="point" />
		<result property="documentCount" column="documentCount" />
		<result property="commentCount" column="commentCount" />
		<result property="likeCount" column="likeCount" />
		<result property="dislikeCount" column="dislikeCount" />
		<result property="isAdmin" column="isAdmin" />
		<result property="allowMailing" column="allowMailing" />
		<result property="regDate" column="regDate" />
		<result property="lastLogin" column="lastLogin" />
	</resultMap>
	
	<delete id="dropMember">
		DROP TABLE IF EXISTS member;
	</delete>
	
	<update id="createMember">
		CREATE TABLE IF NOT EXISTS member (
			memberId INT AUTO_INCREMENT,
			userId VARCHAR(12) UNIQUE NOT NULL,
			email VARCHAR(40),
			nickName VARCHAR(20),
			password CHAR(41) NOT NULL,
			birthday DATE,
			description TEXT,
			point INT DEFAULT 0,
			documentCount INT DEFAULT 0,
			commentCount INT DEFAULT 0,
			likeCount INT DEFAULT 0,
			dislikeCount INT DEFAULT 0,
			isAdmin BOOLEAN DEFAULT false,
			allowMailing BOOLEAN DEFAULT false,
			regDate DATETIME NOT NULL,
			lastLogin DATETIME NOT NULL,
			PRIMARY KEY (memberId)
		) ENGINE=InnoDB DEFAULT CHARSET=UTF8
	</update>
	
	<insert id="saveMember" parameterType="member">
		INSERT
		INTO member 
				(userId,
				email,
				nickName,
				password,
				birthday,
				description,
				point,
				documentCount,
				commentCount,
				likeCount,
				dislikeCount,
				isAdmin,
				allowMailing,
				regDate,
				lastLogin)
		VALUES (#{userId},
				#{email},
				#{nickName},
				#{password},
				#{birthday},
				#{description},
				#{point},
				#{documentCount},
				#{commentCount},
				#{likeCount},
				#{dislikeCount},
				#{isAdmin},
				#{allowMailing},
				NOW(),
				NOW());
	</insert>
	
	<select id="getAllMember" resultMap="result">
		SELECT *
		FROM member;
	</select>
	
	<select id="getMember" resultType="member">
		SELECT *
		FROM member
		WHERE userId = #{value}
		LIMIT 1;
	</select>
	
	<select id="countMember" resultType="int">
		SELECT COUNT(*)
		FROM member;
	</select>
	
	<update id="updateMember" parameterType="member">
  		UPDATE member
  		SET
  			userId = #{userId},
			email = #{email},
			nickName = #{nickName},
			password = #{password},
			birthday = #{birthday},
			description = #{description},
			point = #{point},
			documentCount = #{documentCount},
			commentCount = #{commentCount},
			likeCount = #{likeCount},
			dislikeCount = #{dislikeCount},
			isAdmin = #{isAdmin},
			allowMailing = #{allowMailing},
			lastLogin = NOW()
  		where userId = #{userId};
	</update>
	
	<delete id="deleteMember" parameterType="int">
		DELETE
		FROM member
		WHERE userId = #{userId};
	</delete>
</mapper>